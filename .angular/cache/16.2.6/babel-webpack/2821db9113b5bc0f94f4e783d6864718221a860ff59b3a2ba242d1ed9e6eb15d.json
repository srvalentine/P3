{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Duoc/Desktop/master/carlos_rama/P3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport jsqr from 'jsqr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"video\"];\nconst _c1 = [\"canvas\"];\nfunction QrPage_ion_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 9);\n    i0.ɵɵlistener(\"click\", function QrPage_ion_button_4_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.reset());\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 10);\n    i0.ɵɵtext(2, \" Reiniciar Escaneo \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QrPage_ion_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 11);\n    i0.ɵɵlistener(\"click\", function QrPage_ion_button_9_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.stopScan());\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 12);\n    i0.ɵɵtext(2, \" Detener escaneo \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QrPage_ion_card_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-card-header\")(2, \"ion-card-title\");\n    i0.ɵɵtext(3, \"Se a escaneado correctamente\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nlet QrPage = /*#__PURE__*/(() => {\n  class QrPage {\n    constructor(loadingCtrl, toastCtrl, router) {\n      this.loadingCtrl = loadingCtrl;\n      this.toastCtrl = toastCtrl;\n      this.router = router;\n      this.scanActive = false;\n      this.scanResult = '';\n      this.hasScanned = false;\n      this.loading = null;\n      this.scanResult = '';\n      this.loading = null;\n    }\n    ngAfterViewInit() {\n      this.videoElement = this.video.nativeElement;\n      this.canvasElement = this.canvas.nativeElement;\n      this.canvasContext = this.canvasElement.getContext('2d');\n    }\n    startScan() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (!_this.hasScanned) {\n          const stream = yield navigator.mediaDevices.getUserMedia({\n            video: {\n              facingMode: 'environment'\n            }\n          });\n          _this.videoElement.srcObject = stream;\n          _this.videoElement.setAttribute('playsinline', true);\n          _this.videoElement.play();\n          _this.loading = yield _this.loadingCtrl.create({});\n          yield _this.loading.present();\n          requestAnimationFrame(_this.scan.bind(_this));\n        }\n      })();\n    }\n    scan() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (_this2.videoElement.readyState === _this2.videoElement.HAVE_ENOUGH_DATA) {\n          if (_this2.loading) {\n            yield _this2.loading.dismiss();\n            _this2.loading = null;\n            _this2.scanActive = true;\n          }\n        } else {\n          requestAnimationFrame(_this2.scan.bind(_this2));\n        }\n        _this2.canvasElement.height = _this2.videoElement.videoHeight;\n        _this2.canvasElement.width = _this2.videoElement.videoWidth;\n        _this2.canvasContext.drawImage(_this2.videoElement, 0, 0, _this2.canvasElement.width, _this2.canvasElement.height);\n        const imageData = _this2.canvasContext.getImageData(0, 0, _this2.canvasElement.width, _this2.canvasElement.height);\n        const code = jsqr(imageData.data, imageData.width, imageData.height, {\n          inversionAttempts: 'dontInvert'\n        });\n        console.log('code:', code);\n        if (code) {\n          _this2.hasScanned = true;\n          _this2.scanActive = false;\n          _this2.scanResult = code.data;\n          _this2.showQrToast(_this2.scanResult);\n        } else {\n          if (_this2.scanActive) {\n            requestAnimationFrame(_this2.scan.bind(_this2));\n          }\n        }\n      })();\n    }\n    stopScan() {\n      this.scanActive = false;\n    }\n    reset() {\n      this.scanResult = '';\n    }\n    ngOnInit() {}\n    showQrToast(message) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const toast = yield _this3.toastCtrl.create({\n          message: `Se ha escaneado correctamente el código QR`,\n          position: 'top',\n          duration: 15000,\n          buttons: [{\n            text: 'Ver detalles',\n            handler: () => {\n              const qrData = _this3.parseQrData(_this3.scanResult);\n              _this3.iraAsistencia(qrData);\n            }\n          }]\n        });\n        yield toast.present();\n      })();\n    }\n    parseQrData(qrText) {\n      const qrDataArray = qrText.split(', ');\n      const qrData = {\n        profesor: '',\n        horaClase: '',\n        sala: '',\n        dia: ''\n      };\n      qrDataArray.forEach(item => {\n        const [key, value] = item.split(': ');\n        if (key && value) {\n          qrData[key.toLowerCase()] = value;\n        }\n      });\n      return qrData;\n    }\n    iraAsistencia(qrData) {\n      this.router.navigate(['/asistencia'], {\n        queryParams: {\n          qrData: JSON.stringify(qrData)\n        }\n      });\n    }\n    static #_ = this.ɵfac = function QrPage_Factory(t) {\n      return new (t || QrPage)(i0.ɵɵdirectiveInject(i1.LoadingController), i0.ɵɵdirectiveInject(i1.ToastController), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: QrPage,\n      selectors: [[\"app-qr\"]],\n      viewQuery: function QrPage_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.video = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n        }\n      },\n      decls: 11,\n      vars: 4,\n      consts: [[\"expand\", \"full\", \"color\", \"success\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"qr\"], [\"expand\", \"full\", \"color\", \"warning\", 3, \"click\", 4, \"ngIf\"], [\"width\", \"100%\", 3, \"hidden\"], [\"video\", \"\"], [\"hidden\", \"\"], [\"canvas\", \"\"], [\"expand\", \"full\", \"color\", \"danger\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"expand\", \"full\", \"color\", \"warning\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"refresh\"], [\"expand\", \"full\", \"color\", \"danger\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"close\"]],\n      template: function QrPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-content\")(1, \"ion-button\", 0);\n          i0.ɵɵlistener(\"click\", function QrPage_Template_ion_button_click_1_listener() {\n            return ctx.startScan();\n          });\n          i0.ɵɵelement(2, \"ion-icon\", 1);\n          i0.ɵɵtext(3, \" Iniciar Escaneo \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, QrPage_ion_button_4_Template, 3, 0, \"ion-button\", 2);\n          i0.ɵɵelement(5, \"video\", 3, 4)(7, \"canvas\", 5, 6);\n          i0.ɵɵtemplate(9, QrPage_ion_button_9_Template, 3, 0, \"ion-button\", 7);\n          i0.ɵɵtemplate(10, QrPage_ion_card_10_Template, 4, 0, \"ion-card\", 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.scanResult);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"hidden\", !ctx.scanActive);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.scanActive);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.scanResult);\n        }\n      },\n      dependencies: [i3.NgIf, i1.IonButton, i1.IonCard, i1.IonCardHeader, i1.IonCardTitle, i1.IonContent, i1.IonIcon]\n    });\n  }\n  return QrPage;\n})();\nexport { QrPage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}